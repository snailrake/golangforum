// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/chat_repository.go
//
// Generated by this command:
//
//	mockgen -source=internal/repository/chat_repository.go -destination=internal/repository/mocks/chat_repository_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	model "golangforum/internal/model"
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockChatRepository is a mock of ChatRepository interface.
type MockChatRepository struct {
	ctrl     *gomock.Controller
	recorder *MockChatRepositoryMockRecorder
	isgomock struct{}
}

// MockChatRepositoryMockRecorder is the mock recorder for MockChatRepository.
type MockChatRepositoryMockRecorder struct {
	mock *MockChatRepository
}

// NewMockChatRepository creates a new mock instance.
func NewMockChatRepository(ctrl *gomock.Controller) *MockChatRepository {
	mock := &MockChatRepository{ctrl: ctrl}
	mock.recorder = &MockChatRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChatRepository) EXPECT() *MockChatRepositoryMockRecorder {
	return m.recorder
}

// DeleteMessagesOlderThan mocks base method.
func (m *MockChatRepository) DeleteMessagesOlderThan(arg0 time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMessagesOlderThan", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMessagesOlderThan indicates an expected call of DeleteMessagesOlderThan.
func (mr *MockChatRepositoryMockRecorder) DeleteMessagesOlderThan(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMessagesOlderThan", reflect.TypeOf((*MockChatRepository)(nil).DeleteMessagesOlderThan), arg0)
}

// GetAllMessages mocks base method.
func (m *MockChatRepository) GetAllMessages() ([]model.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllMessages")
	ret0, _ := ret[0].([]model.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllMessages indicates an expected call of GetAllMessages.
func (mr *MockChatRepositoryMockRecorder) GetAllMessages() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllMessages", reflect.TypeOf((*MockChatRepository)(nil).GetAllMessages))
}

// SaveMessage mocks base method.
func (m *MockChatRepository) SaveMessage(arg0 *model.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveMessage", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveMessage indicates an expected call of SaveMessage.
func (mr *MockChatRepositoryMockRecorder) SaveMessage(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveMessage", reflect.TypeOf((*MockChatRepository)(nil).SaveMessage), arg0)
}
